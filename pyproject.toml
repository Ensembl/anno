# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pyproject.toml -- Ensembl Anno project configuration

[project]
# This is the name of your project. The first time you publish this
# package, this name will be registered for you. It will determine how
# users can install this project, e.g.:
#
# $ pip install sampleproject
#
# And where it will live on PyPI: https://pypi.org/project/sampleproject/
#
# There are some restrictions on what makes a valid project name
# specification here:
# https://packaging.python.org/specifications/core-metadata/#name
name = "ensembl-anno"  # Required

# Versions should comply with PEP 440:
version = "0.1"  # Required

description = "Ensembl Anno - pipeline to provide genome annotation"

# This is an optional longer description of your project that represents
# the body of text which users will see when they visit PyPI.
#
readme = "README.md" 

# Specify which Python versions the project support; 'pip install' will check this
# and refuse to install the project if the version does not match. See
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires
requires-python = ">=3.8"

# This is either text indicating the license for the distribution, or a file
# that contains the license
# https://packaging.python.org/en/latest/specifications/core-metadata/#license
license = {file = "LICENSE"}

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
keywords = ["ensembl", 
"annotation", 
"genetics",
"bioinformatics",
"setuptools"]  

authors = [
        { name = "Ensembl", email = "dev@ensembl.org" } 
]

maintainers = [
        { name = "Ensembl", email = "dev@ensembl.org" } 
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
#classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  #"Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  #"Intended Audience :: Science/Research",
  #"Topic :: Scientific/Engineering :: Bio-Informatics",
  #"Topic :: Software Development :: Libraries :: Python Modules",

  #"License :: OSI Approved :: Apache Software License",
  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  #"Programming Language :: Python :: 3",
  #"Programming Language :: Python :: 3.7",
  #"Programming Language :: Python :: 3.8",
  #"Programming Language :: Python :: 3.9",
  #"Programming Language :: Python :: 3.10",
  #"Programming Language :: Python :: 3.11",
  #"Programming Language :: Python :: 3 :: Only",
#]

# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
#
# For an analysis of this field vs pip's requirements files see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/
#dependencies = [ # Optional
#TOADD

#]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Similar to `dependencies` above, these must be valid existing
# projects.
[project.optional-dependencies] # Optional
dev = [
    "black",
    "ipython",
    "mock",
    "mypy",
    "pylint",
    "pytest",
    "Sphinx",
]
doc = [
    "mock",
    "Sphinx",
]

[project.urls]  
homepage = "https://www.ensembl.org"
repository = "https://github.com/Ensembl/ensembl-anno"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts]  # Optional
#ensembl-anno = "ensembl.anno.ensembl_anno:main"
run_repeatmasker = "ensembl.tools.anno.repeats.repeatmasker:main"
# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
#package-data = {"ensembl-anno" = ["data"]}
package-dir = {"" = "src/python"}

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "setuptools-scm", "wheel"]
#requires = ["setuptools"]


[tool.setuptools.packages.find]
#where = ["src/python/ensembl/tools/anno"]  # list of folders that contain the packages (["."] by default)
where = ["src/python"]

[tool.black]
line-length = 110


####TOADD#####
#[tool.pytest.ini_options]
# CITest project is on hold and it needs to be updated before resuming its unit tests
#addopts = "-v --tb=native --server=mysql://ensadmin:$ENSADMIN_PSW@mysql-ens-compara-prod-1:4485/ --ignore=src/python/tests/test_citest.py"
#testpaths = ["src/python/tests"]
#
[tool.mypy]
mypy_path = "src/python"
explicit_package_bases = true
ignore_missing_imports = true
show_error_codes = true
warn_unused_configs = true

[tool.pylint.messages_control]
max-line-length = 110
disable = [
    "invalid-name",
    "similarities",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-statements",
    "unspecified-encoding",
    "wildcard-import"
]

#[tool.coverage.run]
#branch = true
#source = [
#    "src/python/ensembl/tools/anno",
#    ]
